{"ast":null,"code":"import * as types from \"../constants/blog.constants\";\nimport api from \"../../apiService\";\n\nconst getPosts = (pageNum, limit, field_name) => async dispatch => {\n  dispatch({\n    type: types.GET_POSTS_REQUEST\n  });\n\n  try {\n    let query = \"\";\n\n    if (field_name) {\n      query = `&title[$regex]=${field_name}&title[$options]=i`;\n    }\n\n    const url = `/blogs?page=${pageNum}&limit=${limit}${query}&sortBy[createdAt]=1`;\n    const res = await api.get(url);\n    console.log(\" success\", res.data.success);\n\n    if (res.data.success === true) {\n      console.log(\"data\", res.data.data.blogs);\n      dispatch({\n        type: types.GET_POSTS_SUCCESS,\n        payload: res.data.data.blogs\n      });\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    dispatch({\n      type: types.GET_POSTS_FAILURE,\n      payload: error\n    });\n  }\n};\n\nconst blogActions = {\n  getPosts\n};\nexport default blogActions;","map":{"version":3,"sources":["/Users/catanh/Desktop/coderschool/social-blog-group-3/src/redux/actions/blog.actions.js"],"names":["types","api","getPosts","pageNum","limit","field_name","dispatch","type","GET_POSTS_REQUEST","query","url","res","get","console","log","data","success","blogs","GET_POSTS_SUCCESS","payload","error","GET_POSTS_FAILURE","blogActions"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,6BAAvB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,OAAD,EAAUC,KAAV,EAAiBC,UAAjB,KAAgC,MAAOC,QAAP,IAAoB;AACnEA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP,KAAK,CAACQ;AAAd,GAAD,CAAR;;AACA,MAAI;AACF,QAAIC,KAAK,GAAG,EAAZ;;AACA,QAAIJ,UAAJ,EAAgB;AACdI,MAAAA,KAAK,GAAI,kBAAiBJ,UAAW,oBAArC;AACD;;AACD,UAAMK,GAAG,GAAI,eAAcP,OAAQ,UAASC,KAAM,GAAEK,KAAM,sBAA1D;AACA,UAAME,GAAG,GAAG,MAAMV,GAAG,CAACW,GAAJ,CAAQF,GAAR,CAAlB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,GAAG,CAACI,IAAJ,CAASC,OAAjC;;AACA,QAAIL,GAAG,CAACI,IAAJ,CAASC,OAAT,KAAqB,IAAzB,EAA+B;AAC7BH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,GAAG,CAACI,IAAJ,CAASA,IAAT,CAAcE,KAAlC;AACAX,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEP,KAAK,CAACkB,iBAAd;AAAiCC,QAAAA,OAAO,EAAER,GAAG,CAACI,IAAJ,CAASA,IAAT,CAAcE;AAAxD,OAAD,CAAR;AACD;AACF,GAZD,CAYE,OAAOG,KAAP,EAAc;AACdP,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBM,KAArB;AACAd,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,KAAK,CAACqB,iBAAd;AAAiCF,MAAAA,OAAO,EAAEC;AAA1C,KAAD,CAAR;AACD;AACF,CAlBD;;AAmBA,MAAME,WAAW,GAAG;AAClBpB,EAAAA;AADkB,CAApB;AAIA,eAAeoB,WAAf","sourcesContent":["import * as types from \"../constants/blog.constants\";\nimport api from \"../../apiService\";\n\nconst getPosts = (pageNum, limit, field_name) => async (dispatch) => {\n  dispatch({ type: types.GET_POSTS_REQUEST });\n  try {\n    let query = \"\";\n    if (field_name) {\n      query = `&title[$regex]=${field_name}&title[$options]=i`;\n    }\n    const url = `/blogs?page=${pageNum}&limit=${limit}${query}&sortBy[createdAt]=1`;\n    const res = await api.get(url);\n    console.log(\" success\", res.data.success);\n    if (res.data.success === true) {\n      console.log(\"data\", res.data.data.blogs);\n      dispatch({ type: types.GET_POSTS_SUCCESS, payload: res.data.data.blogs });\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    dispatch({ type: types.GET_POSTS_FAILURE, payload: error });\n  }\n};\nconst blogActions = {\n  getPosts,\n};\n\nexport default blogActions;\n"]},"metadata":{},"sourceType":"module"}