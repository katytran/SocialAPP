{"ast":null,"code":"import * as types from \"../constants/blog.constants\";\nconst initialState = {\n  // all blogs\n  blogPosts: [],\n  loading: true,\n  totalPages: null,\n  //single blog\n  selectedBlog: null,\n  loadingSelectedBlog: true,\n  loadingSubmitReview: true\n};\n\nconst blogReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    // get Blogs\n    case types.GET_BLOGS_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case types.GET_BLOGS_SUCCESS:\n      return { ...state,\n        blogPosts: payload.blogs,\n        totalPages: payload.totalPages,\n        loading: false\n      };\n\n    case types.GET_BLOGS_FAILURE:\n      return { ...state,\n        loading: false\n      };\n    // single blog\n\n    case types.GET_SINGLE_BLOGS_REQUEST:\n      return { ...state,\n        loadingSelectedBlog: true\n      };\n\n    case types.GET_SINGLE_BLOGS_SUCCESS:\n      return { ...state,\n        loadingSelectedBlog: false,\n        selectedBlog: payload\n      };\n\n    case types.GET_SINGLE_BLOGS_FAILURE:\n      return { ...state,\n        loadingSelectedBlog: false\n      };\n    // create reviews\n\n    case types.CREATE_REVIEW_REQUEST:\n      return { ...state,\n        loadingSubmitReview: true\n      };\n\n    case types.CREATE_REVIEW_SUCCESS:\n      return { ...state,\n        loadingSubmitReview: false,\n        selectedBlog: { ...state.selectedBlog,\n          reviews: [...state.selectedBlog.reviews, payload]\n        }\n      };\n\n    case types.CREATE_REVIEW_FAILURE:\n      return { ...state,\n        loadingSubmitReview: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default blogReducer;","map":{"version":3,"sources":["/Users/catanh/Desktop/coderschool/social-blog-group-3/src/redux/reducers/blog.reducer.js"],"names":["types","initialState","blogPosts","loading","totalPages","selectedBlog","loadingSelectedBlog","loadingSubmitReview","blogReducer","state","action","type","payload","GET_BLOGS_REQUEST","GET_BLOGS_SUCCESS","blogs","GET_BLOGS_FAILURE","GET_SINGLE_BLOGS_REQUEST","GET_SINGLE_BLOGS_SUCCESS","GET_SINGLE_BLOGS_FAILURE","CREATE_REVIEW_REQUEST","CREATE_REVIEW_SUCCESS","reviews","CREATE_REVIEW_FAILURE"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,6BAAvB;AAEA,MAAMC,YAAY,GAAG;AACnB;AACAC,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,UAAU,EAAE,IAJO;AAMnB;AACAC,EAAAA,YAAY,EAAE,IAPK;AAQnBC,EAAAA,mBAAmB,EAAE,IARF;AASnBC,EAAAA,mBAAmB,EAAE;AATF,CAArB;;AAYA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE;AACA,SAAKX,KAAK,CAACa,iBAAX;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYN,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKH,KAAK,CAACc,iBAAX;AACE,aAAO,EACL,GAAGL,KADE;AAELP,QAAAA,SAAS,EAAEU,OAAO,CAACG,KAFd;AAGLX,QAAAA,UAAU,EAAEQ,OAAO,CAACR,UAHf;AAILD,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKH,KAAK,CAACgB,iBAAX;AACE,aAAO,EAAE,GAAGP,KAAL;AAAYN,QAAAA,OAAO,EAAE;AAArB,OAAP;AAEF;;AACA,SAAKH,KAAK,CAACiB,wBAAX;AACE,aAAO,EAAE,GAAGR,KAAL;AAAYH,QAAAA,mBAAmB,EAAE;AAAjC,OAAP;;AACF,SAAKN,KAAK,CAACkB,wBAAX;AACE,aAAO,EAAE,GAAGT,KAAL;AAAYH,QAAAA,mBAAmB,EAAE,KAAjC;AAAwCD,QAAAA,YAAY,EAAEO;AAAtD,OAAP;;AACF,SAAKZ,KAAK,CAACmB,wBAAX;AACE,aAAO,EAAE,GAAGV,KAAL;AAAYH,QAAAA,mBAAmB,EAAE;AAAjC,OAAP;AAEF;;AACA,SAAKN,KAAK,CAACoB,qBAAX;AACE,aAAO,EAAE,GAAGX,KAAL;AAAYF,QAAAA,mBAAmB,EAAE;AAAjC,OAAP;;AACF,SAAKP,KAAK,CAACqB,qBAAX;AACE,aAAO,EACL,GAAGZ,KADE;AAELF,QAAAA,mBAAmB,EAAE,KAFhB;AAGLF,QAAAA,YAAY,EAAE,EACZ,GAAGI,KAAK,CAACJ,YADG;AAEZiB,UAAAA,OAAO,EAAE,CAAC,GAAGb,KAAK,CAACJ,YAAN,CAAmBiB,OAAvB,EAAgCV,OAAhC;AAFG;AAHT,OAAP;;AAQF,SAAKZ,KAAK,CAACuB,qBAAX;AACE,aAAO,EAAE,GAAGd,KAAL;AAAYF,QAAAA,mBAAmB,EAAE;AAAjC,OAAP;;AACF;AACE,aAAOE,KAAP;AArCJ;AAuCD,CAzCD;;AA2CA,eAAeD,WAAf","sourcesContent":["import * as types from \"../constants/blog.constants\";\n\nconst initialState = {\n  // all blogs\n  blogPosts: [],\n  loading: true,\n  totalPages: null,\n\n  //single blog\n  selectedBlog: null,\n  loadingSelectedBlog: true,\n  loadingSubmitReview: true,\n};\n\nconst blogReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    // get Blogs\n    case types.GET_BLOGS_REQUEST:\n      return { ...state, loading: true };\n    case types.GET_BLOGS_SUCCESS:\n      return {\n        ...state,\n        blogPosts: payload.blogs,\n        totalPages: payload.totalPages,\n        loading: false,\n      };\n    case types.GET_BLOGS_FAILURE:\n      return { ...state, loading: false };\n\n    // single blog\n    case types.GET_SINGLE_BLOGS_REQUEST:\n      return { ...state, loadingSelectedBlog: true };\n    case types.GET_SINGLE_BLOGS_SUCCESS:\n      return { ...state, loadingSelectedBlog: false, selectedBlog: payload };\n    case types.GET_SINGLE_BLOGS_FAILURE:\n      return { ...state, loadingSelectedBlog: false };\n\n    // create reviews\n    case types.CREATE_REVIEW_REQUEST:\n      return { ...state, loadingSubmitReview: true };\n    case types.CREATE_REVIEW_SUCCESS:\n      return {\n        ...state,\n        loadingSubmitReview: false,\n        selectedBlog: {\n          ...state.selectedBlog,\n          reviews: [...state.selectedBlog.reviews, payload],\n        },\n      };\n    case types.CREATE_REVIEW_FAILURE:\n      return { ...state, loadingSubmitReview: false };\n    default:\n      return state;\n  }\n};\n\nexport default blogReducer;\n"]},"metadata":{},"sourceType":"module"}